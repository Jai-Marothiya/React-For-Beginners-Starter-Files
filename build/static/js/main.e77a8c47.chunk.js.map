{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","StoreName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOption","classNames","timeout","enter","exit","CSSTransition","TransitionGroup","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","imageRef","descRef","createFish","parseFloat","image","decs","addFish","currentTarget","reset","EditFishForm","handleChange","console","log","updatedFish","updateFish","index","onChange","desc","deleteFish","Login","authenticate","firebaseApp","Firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","firebase","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","age","hulu","NotFound","Router","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.e77a8c47.chunk.js","sourcesContent":["export function formatPrice(cents) {\r\n  return (cents / 100).toLocaleString(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\"\r\n  });\r\n}\r\n\r\nexport function rando(arr) {\r\n  return arr[Math.floor(Math.random() * arr.length)];\r\n}\r\n\r\nexport function slugify(text) {\r\n  return text\r\n    .toString()\r\n    .toLowerCase()\r\n    .replace(/\\s+/g, \"-\")\r\n    .replace(/[^\\w-]+/g, \"\")\r\n    .replace(/--+/g, \"-\")\r\n    .replace(/^-+/, \"\")\r\n    .replace(/-+$/, \"\");\r\n}\r\n\r\nexport function getFunName() {\r\n  const adjectives = [\r\n    \"adorable\",\r\n    \"beautiful\",\r\n    \"clean\",\r\n    \"drab\",\r\n    \"elegant\",\r\n    \"fancy\",\r\n    \"glamorous\",\r\n    \"handsome\",\r\n    \"long\",\r\n    \"magnificent\",\r\n    \"old-fashioned\",\r\n    \"plain\",\r\n    \"quaint\",\r\n    \"sparkling\",\r\n    \"ugliest\",\r\n    \"unsightly\",\r\n    \"angry\",\r\n    \"bewildered\",\r\n    \"clumsy\",\r\n    \"defeated\",\r\n    \"embarrassed\",\r\n    \"fierce\",\r\n    \"grumpy\",\r\n    \"helpless\",\r\n    \"itchy\",\r\n    \"jealous\",\r\n    \"lazy\",\r\n    \"mysterious\",\r\n    \"nervous\",\r\n    \"obnoxious\",\r\n    \"panicky\",\r\n    \"repulsive\",\r\n    \"scary\",\r\n    \"thoughtless\",\r\n    \"uptight\",\r\n    \"worried\"\r\n  ];\r\n\r\n  const nouns = [\r\n    \"women\",\r\n    \"men\",\r\n    \"children\",\r\n    \"teeth\",\r\n    \"feet\",\r\n    \"people\",\r\n    \"leaves\",\r\n    \"mice\",\r\n    \"geese\",\r\n    \"halves\",\r\n    \"knives\",\r\n    \"wives\",\r\n    \"lives\",\r\n    \"elves\",\r\n    \"loaves\",\r\n    \"potatoes\",\r\n    \"tomatoes\",\r\n    \"cacti\",\r\n    \"foci\",\r\n    \"fungi\",\r\n    \"nuclei\",\r\n    \"syllabuses\",\r\n    \"analyses\",\r\n    \"diagnoses\",\r\n    \"oases\",\r\n    \"theses\",\r\n    \"crises\",\r\n    \"phenomena\",\r\n    \"criteria\",\r\n    \"data\"\r\n  ];\r\n\r\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\r\n}\r\n","import React,{Fragment} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {getFunName} from '../helpers';\r\n\r\nclass StorePicker extends React.Component{\r\n    static propTypes={\r\n        history:PropTypes.object\r\n    }\r\n    myInput=React.createRef();\r\n\r\n    goToStore=(event)=>{\r\n        //1.Stop the form from submitting\r\n        event.preventDefault();\r\n        //2.Get the text from the input\r\n        // console.log(event.target[0].value);\r\n        const StoreName =this.myInput.current.value;\r\n        //3.Change the page to /store/whatever they entered\r\n        this.props.history.push(`/store/${StoreName}`);\r\n    }\r\n    \r\n    render(){\r\n        // return React.createElement('p',{className:\"Hey\"},'It is React Created element');\r\n       return (\r\n           <form className='store-selector' onSubmit={this.goToStore}>\r\n            {/* Comment  */}\r\n        <h2>Please Enter a Store</h2>\r\n        <input type=\"text\" ref={this.myInput} required placeholder=\"Store Name\" defaultValue={getFunName()}/>\r\n        <button type=\"submit\" >Visit Store ➡</button>\r\n       </form>\r\n       )\r\n    }\r\n}\r\n\r\nexport default StorePicker;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header=(props)=>(\r\n            <header className=\"top\" >\r\n                <h1>\r\n                    Catch   \r\n                    <span className=\"ofThe\">\r\n                        <span className=\"of\">Of</span>\r\n                        <span className=\"the\">The</span>                      \r\n                    </span>   \r\n                    Day\r\n                </h1>\r\n                <h3 className=\"tagline\">\r\n                    <span>{props.tagline}</span>\r\n                </h3>\r\n            </header>\r\n)\r\n\r\nHeader.propTypes={\r\n    tagline: PropTypes.string.isRequired\r\n}\r\n         \r\n\r\n\r\n// class Header extends React.Component{\r\n//      render(){\r\n//         return (\r\n//             <header className=\"top\" >\r\n//                 <h1>\r\n//                     Catch   \r\n//                     <span className=\"ofThe\">\r\n//                         <span className=\"of\">Of</span>\r\n//                         <span className=\"the\">The</span>                      \r\n//                     </span>   \r\n//                     Day\r\n//                 </h1>\r\n//                 <h3 className=\"tagline\">\r\n//                     <span>{this.props.tagline}</span>\r\n//                 </h3>\r\n//             </header>\r\n//         )\r\n//      }\r\n// }\r\n\r\nexport default Header;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {formatPrice} from \"../helpers\"\r\nimport {TransitionGroup, CSSTransition} from 'react-transition-group'\r\n\r\nclass Order extends React.Component{\r\n    static propTypes={\r\n        fishes: PropTypes.object,\r\n        order: PropTypes.object,\r\n        removeFromOrder: PropTypes.func\r\n    }\r\n    renderOrder=(key)=>{\r\n        const fish = this.props.fishes[key];\r\n        const count = this.props.order[key];\r\n        const isAvailable = fish && fish.status === 'available';\r\n        const transitionOption ={\r\n            classNames:\"order\",\r\n             key,\r\n              timeout:{enter:500 , exit:500}\r\n        };\r\n        //Make sure the fishes is loaded before we Continue!!\r\n        if(!fish){\r\n            return null;\r\n        }\r\n        if(!isAvailable){\r\n            return (\r\n                <CSSTransition {...transitionOption}>\r\n                    <li key={key}>Sorry {fish?fish.name:'fish'} is no longer available </li>\r\n                </CSSTransition>\r\n            )\r\n        }\r\n        return( \r\n            <CSSTransition {...transitionOption}>\r\n                <li key={key}>\r\n                    <span>\r\n                        <TransitionGroup component='span' className='count'>\r\n                            <CSSTransition classNames='count' key={count} timeout={{enter:500 , exit:500}}>\r\n                               <span>{count}</span> \r\n                            </CSSTransition>\r\n                        </TransitionGroup>\r\n                        lbs {fish.name}\r\n                        {formatPrice(count*fish.price)}\r\n                        <button onClick={()=>this.props.removeFromOrder(key)}>&times;</button>\r\n                    </span>\r\n                </li>\r\n            </CSSTransition>\r\n        )\r\n    }\r\n    render(){\r\n        const orderIds = Object.keys(this.props.order) ;\r\n        const total = orderIds.reduce((prevTotal,key)=>{\r\n            const fish = this.props.fishes[key];\r\n            const count = this.props.order[key];\r\n            const isAvailable = fish && fish.status === 'available';\r\n            if(isAvailable){\r\n               return prevTotal + count*fish.price;\r\n            }\r\n            return prevTotal;\r\n        },0);\r\n\r\n        return(\r\n            <div className=\"order-wrap\">\r\n                <h2>Order</h2>\r\n                <TransitionGroup component='ul' className=\"order\">\r\n                    {orderIds.map(this.renderOrder)}\r\n                </TransitionGroup>  \r\n                <div className=\"total\">\r\n                   Total:\r\n                   <strong>{formatPrice(total)}</strong>\r\n                </div>        \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Order;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AddFishForm extends React.Component{\r\n    nameRef = React.createRef();\r\n    priceRef = React.createRef();\r\n    statusRef = React.createRef();\r\n    imageRef = React.createRef();\r\n    descRef = React.createRef();\r\n\r\n    static propTypes={\r\n        addFish: PropTypes.func,\r\n    }\r\n    \r\n    createFish=(event)=>{\r\n        //1. Stop the submitting of form\r\n        event.preventDefault();\r\n        const fish={\r\n            name:this.nameRef.current.value,\r\n            price:parseFloat(this.priceRef.current.value),\r\n            status:this.statusRef.current.value,\r\n            image:this.imageRef.current.value,\r\n            decs:this.descRef.current.value,\r\n        }\r\n\r\n\r\n        this.props.addFish(fish);\r\n        //Refresh the form\r\n        event.currentTarget.reset();\r\n    }\r\n    render(){\r\n        return (\r\n            <form className=\"fish-edit\" onSubmit={this.createFish}>\r\n                <input  name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\"/>\r\n                <input  name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\"/>\r\n                <select name=\"status\" ref={this.statusRef}>\r\n                    <option value=\"available\" >Fresh!</option>\r\n                    <option value=\"unavailable\" >Sold Out!</option>\r\n                </select>\r\n                <input  name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\"/>\r\n                <textarea  name=\"desc\" ref={this.descRef}  placeholder=\"Desc\" />\r\n                <button type=\"submit\">+ Add Fish</button>\r\n            </form> \r\n        )\r\n    }\r\n}\r\n\r\nexport default AddFishForm;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass EditFishForm extends React.Component{\r\n    static propTypes={\r\n        fish:  PropTypes.shape({\r\n            image : PropTypes.string,\r\n            name : PropTypes.string,\r\n            price : PropTypes.string,\r\n            status : PropTypes.string,\r\n            desc : PropTypes.number\r\n        }),\r\n        index: PropTypes.string,\r\n        updateFish: PropTypes.func, \r\n        deleteFish: PropTypes.func\r\n    }\r\n\r\n    handleChange=event=>{\r\n        console.log(event.currentTarget.value);\r\n        //Update that fish\r\n        //1. Take a copy of that fish\r\n        const updatedFish = {\r\n            ...this.props.fish,\r\n            [event.currentTarget.name]: event.currentTarget.value\r\n        };\r\n        this.props.updateFish(this.props.index,updatedFish);\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"fish-edit\">\r\n                <input  name=\"name\" type=\"text\" onChange={this.handleChange} value={this.props.fish.name}/>\r\n                <input  name=\"price\" type=\"text\" onChange={this.handleChange} value={this.props.fish.price}/>\r\n                <select name=\"status\" onChange={this.handleChange} value={this.props.fish.status}>\r\n                    <option value=\"available\" >Fresh!</option>\r\n                    <option value=\"unavailable\" >Sold Out!</option>\r\n                </select>\r\n                <textarea  name=\"desc\" onChange={this.handleChange} value={this.props.fish.desc} />\r\n                <input  name=\"image\" type=\"text\" onChange={this.handleChange} value={this.props.fish.image}/>\r\n                <button onClick={()=>this.props.deleteFish(this.props.index)}>Remove Fish</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditFishForm;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Login = props => (\r\n  <nav className=\"login\">\r\n    <h2>Inventory Login</h2>\r\n    <p>Sign in to manage your store's inventory.</p>\r\n    <button className=\"github\" onClick={() => props.authenticate(\"Github\")}>\r\n      Log In With GitHub\r\n    </button>\r\n    <button className=\"twitter\" onClick={() => props.authenticate(\"Twitter\")}>\r\n      Log In With Twitter\r\n    </button>\r\n    <button className=\"facebook\" onClick={() => props.authenticate(\"Facebook\")}>\r\n      Log In With Facebook\r\n    </button>\r\n  </nav>\r\n);\r\n\r\nLogin.propTypes = {\r\n  authenticate: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Login;","import Rebase from 're-base';\r\nimport Firebase from 'firebase';\r\n\r\nconst firebaseApp = Firebase.initializeApp({\r\n    apiKey: \"AIzaSyDtF8e7XcIYu5FKDb69RVMtNOPdgHwvz34\",\r\n    authDomain: \"catch-of-the-day-jai-marothiya.firebaseapp.com\",\r\n    databaseURL: \"https://catch-of-the-day-jai-marothiya-default-rtdb.firebaseio.com\",\r\n  });\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\n// This is a named export\r\nexport {firebaseApp};\r\n\r\n//this is default export\r\nexport default base;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport firebase from \"firebase\";\r\nimport AddFishForm from \"./AddFishForm\";\r\nimport EditFishForm from \"./EditFishForm\";\r\nimport Login from \"./Login\";\r\nimport base, { firebaseApp } from \"../base\";\r\n\r\nclass Inventory extends React.Component {\r\n  static propTypes = {\r\n    fishes: PropTypes.object,\r\n    updateFish: PropTypes.func,\r\n    deleteFish: PropTypes.func,\r\n    loadSampleFishes: PropTypes.func,\r\n    addFish: PropTypes.func\r\n  };\r\n\r\n  state = {\r\n    uid: null,\r\n    owner: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      if (user) {\r\n        this.authHandler({ user });\r\n      }\r\n    });\r\n  }\r\n\r\n  authHandler = async authData => {\r\n    // 1 .Look up the current store in the firebase database\r\n    const store = await base.fetch(this.props.storeId, { context: this });\r\n    console.log(store);\r\n    // 2. Claim it if there is no owner\r\n    if (!store.owner) {\r\n      // save it as our own\r\n      await base.post(`${this.props.storeId}/owner`, {\r\n        data: authData.user.uid\r\n      });\r\n    }\r\n    // 3. Set the state of the inventory component to reflect the current user\r\n    this.setState({\r\n      uid: authData.user.uid,\r\n      owner: store.owner || authData.user.uid\r\n    });\r\n  };\r\n\r\n  authenticate = provider => {\r\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n    firebaseApp\r\n      .auth()\r\n      .signInWithPopup(authProvider)\r\n      .then(this.authHandler);\r\n  };\r\n\r\n  logout = async () => {\r\n    console.log(\"Logging out!\");\r\n    await firebase.auth().signOut();\r\n    this.setState({ uid: null });\r\n  };\r\n\r\n  render() {\r\n    const logout = <button onClick={this.logout}>Log Out!</button>;\r\n\r\n    // 1. Check if they are logged in\r\n    if (!this.state.uid) {\r\n      return <Login authenticate={this.authenticate} />;\r\n    }\r\n\r\n    // 2. check if they are not the owner of the store\r\n    if (this.state.uid !== this.state.owner) {\r\n      return (\r\n        <div>\r\n          <p>Sorry you are not the owner!</p>\r\n          {logout}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // 3. They must be the owner, just render the inventory\r\n    return (\r\n      <div className=\"inventory\">\r\n        <h2>Inventory</h2>\r\n        {logout}\r\n        {Object.keys(this.props.fishes).map(key => (\r\n          <EditFishForm\r\n            key={key}\r\n            index={key}\r\n            fish={this.props.fishes[key]}\r\n            updateFish={this.props.updateFish}\r\n            deleteFish={this.props.deleteFish}\r\n          />\r\n        ))}\r\n        <AddFishForm addFish={this.props.addFish} />\r\n        <button onClick={this.props.loadSampleFishes}>\r\n          Load Sample Fishes\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Inventory;","// This is just some sample data so you don't have to think of your own!\r\nconst fishes = {\r\n  fish1: {\r\n    name: \"Pacific Halibut\",\r\n    image: \"/images/hali.jpg\",\r\n    desc:\r\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\r\n    price: 1724,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish2: {\r\n    name: \"Lobster\",\r\n    image: \"/images/lobster.jpg\",\r\n    desc:\r\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\r\n    price: 3200,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish3: {\r\n    name: \"Sea Scallops\",\r\n    image: \"/images/scallops.jpg\",\r\n    desc:\r\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\r\n    price: 1684,\r\n    status: \"unavailable\"\r\n  },\r\n\r\n  fish4: {\r\n    name: \"Mahi Mahi\",\r\n    image: \"/images/mahi.jpg\",\r\n    desc:\r\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\r\n    price: 1129,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish5: {\r\n    name: \"King Crab\",\r\n    image: \"/images/crab.jpg\",\r\n    desc:\r\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\r\n    price: 4234,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish6: {\r\n    name: \"Atlantic Salmon\",\r\n    image: \"/images/salmon.jpg\",\r\n    desc:\r\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\r\n    price: 1453,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish7: {\r\n    name: \"Oysters\",\r\n    image: \"/images/oysters.jpg\",\r\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\r\n    price: 2543,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish8: {\r\n    name: \"Mussels\",\r\n    image: \"/images/mussels.jpg\",\r\n    desc:\r\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\r\n    price: 425,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish9: {\r\n    name: \"Jumbo Prawns\",\r\n    image: \"/images/prawns.jpg\",\r\n    desc:\r\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\r\n    price: 2250,\r\n    status: \"available\"\r\n  }\r\n};\r\n\r\nexport default fishes;\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {formatPrice} from \"../helpers\"\r\n\r\nclass Fish extends React.Component{\r\n    static propTypes={\r\n        details: PropTypes.shape({\r\n            image : PropTypes.string,\r\n            name : PropTypes.string,\r\n            price : PropTypes.string,\r\n            status : PropTypes.string,\r\n            desc : PropTypes.number\r\n        }),\r\n        addToOrder: PropTypes.func\r\n    };\r\n    render(){\r\n        const {image,name,price,desc,status} = this.props.details;\r\n        const isAvailable = status===\"available\";\r\n        return(\r\n            <li className=\"menu-fish\">\r\n                <img src={image} alt={name}/>\r\n                <h3 className=\"fish-name\">\r\n                    {name}\r\n                    <span className=\"price\">{formatPrice(price)}</span>\r\n                </h3>\r\n                <p>{desc}</p>\r\n                <button disabled={!isAvailable} onClick={()=>{this.props.addToOrder(this.props.index);}} > {isAvailable ?'Add To Order' : 'Sold Out!'}</button>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Fish;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport Header from \"../components/Header\";\r\nimport Order from \"../components/Order\";\r\nimport Inventory from \"../components/Inventory\";\r\nimport sampleFishes from \"../sample-fishes\";\r\nimport Fish from \"./Fish\";\r\nimport base from '../base';\r\nimport \"../../src/css/style.css\";\r\n\r\nclass App extends React.Component{\r\n    state={\r\n        fishes : {},\r\n        order: {}\r\n    };\r\n\r\n    static propTypes={\r\n        match: PropTypes.object\r\n    }\r\n\r\n    componentDidMount(){\r\n        const {params} = this.props.match;\r\n        //first reinstate our localStorage\r\n        const localStorageRef = localStorage.getItem(params.storeId);\r\n        if(localStorageRef){\r\n            this.setState({order: JSON.parse(localStorageRef)});\r\n        }\r\n        this.ref = base.syncState(`${params.storeId}/fishes`,{\r\n            context:this,\r\n            state: 'fishes'\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        localStorage.setItem(this.props.match.params.storeId,JSON.stringify(this.state.order));\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        base.removeBinding(this.ref)\r\n    }\r\n\r\n    addFish=(fish)=>{\r\n        //1. Take a copy of existing State\r\n        const fishes = {...this.state.fishes};\r\n        //2.Add our new fish to that fishes variable\r\n        fishes[`fish${Date.now()}`]=fish;\r\n        //3.Set the new fishes object to state\r\n        this.setState({fishes}); \r\n    };\r\n\r\n    updateFish=(key,updatedFish)=>{\r\n        //1. Take a copy of the current state\r\n        const fishes = {...this.state.fishes};\r\n        //2. Update that state\r\n        fishes[key]=updatedFish;\r\n        //3. setthat to state\r\n        this.setState({fishes});\r\n    } \r\n\r\n    deleteFish=(key)=>{\r\n        //1. Take a copy of the current state\r\n        const fishes = {...this.state.fishes};\r\n        //2. Update that state\r\n        fishes[key]=null;\r\n        //3. setthat to state\r\n        this.setState({fishes});\r\n    } \r\n\r\n    loadSampleFishes = () =>{\r\n        this.setState({fishes: sampleFishes});\r\n    };\r\n\r\n    addToOrder = (key) =>{\r\n        //1. Take a Copy of state\r\n        const order ={...this.state.order};\r\n        //2. Either add to the order or update the number in our order\r\n        order[key] = order[key] + 1 || 1;\r\n        //3. Call setback to update our state object\r\n        this.setState({order});\r\n    };\r\n\r\n    removeFromOrder = (key) =>{\r\n        //1. Take a Copy of state\r\n        const order ={...this.state.order};\r\n        //2. Remove that item from order\r\n        delete order[key];\r\n        //3. Call setback to update our state object\r\n        this.setState({order});\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"catch-of-the-day\">\r\n                <div className=\"menu\">\r\n                    <Header tagline= \"Fresh Seafood Market\" age={19} hulu={true}/>\r\n                    <ul className=\"fishes\">\r\n                       {Object.keys(this.state.fishes).map(key => \r\n                       <Fish \r\n                            key={key}\r\n                            index={key} \r\n                            details={this.state.fishes[key]} \r\n                            addToOrder={this.addToOrder}\r\n                        />)}\r\n                    </ul>\r\n                </div>\r\n                <Order fishes={this.state.fishes} order={this.state.order} removeFromOrder={this.removeFromOrder}/>\r\n                <Inventory addFish={this.addFish} loadSampleFishes={this.loadSampleFishes} fishes={this.state.fishes} updateFish = {this.updateFish} deleteFish={this.deleteFish} storeId={this.props.match.params.storeId}/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\n\r\nconst NotFound=()=>(\r\n    <div>\r\n        <h2>Not Found!?!!!!1111!</h2>\r\n    </div>\r\n)\r\n\r\nexport default NotFound;","import React  from \"react\";\r\nimport {BrowserRouter,Route,Switch} from \"react-router-dom\"\r\nimport StorePicker from \"./StorePicker\";\r\nimport App  from './App';\r\nimport NotFound from \"./NotFound\";\r\n\r\nconst Router=()=>(\r\n    <BrowserRouter>\r\n      <Switch>\r\n          <Route exact path=\"/\"  component={StorePicker} />\r\n          <Route path=\"/store/:storeId\" component={App} />\r\n          <Route component={NotFound} />\r\n      </Switch>   \r\n    </BrowserRouter>\r\n)\r\n\r\nexport default Router;","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport Router  from './components/Router';\r\nimport \"./css/style.css\";\r\n\r\n// render(<p>Heeeyyyyyyyy!</p>,document.querySelector('#main'));\r\nrender(<Router />,document.querySelector('#main') );\r\n"],"sourceRoot":""}